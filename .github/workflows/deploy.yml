name: Deploy

permissions:
  packages: read
  contents: write

on:
  release:
    types: [ published ]

  workflow_dispatch:
    inputs:
      version:
        description: "App Version"
        required: true
        type: string

env:
  android_artifact_key: dragon6-android
  windows_artifact_key: dragon6-msix

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: android
            framework: net7.0-android
            output-folder: DragonFruit.Six.Client.Maui\bin\Release\net7.0-android

          - platform: windows
            framework: net7.0-windows10.0.19041.0
            output-folder: DragonFruit.Six.Client.Maui\bin\Release\net7.0-windows10.0.19041.0\win10-x64

    environment: ${{ matrix.platform }}
    name: ${{ matrix.platform }}

    runs-on: windows-latest

    steps:
      - name: Set Build Number
        run: |
          $version = 500 + ${{ github.run_number }}
          echo "VERSION_NUMBER=$version" >> $Env:GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Import keystore
        uses: timheuer/base64-to-file@v1.2
        if: matrix.platform == 'android'
        with:
          fileName: "dragonfruit.keystore"
          fileDir: "./DragonFruit.Six.Client.Maui"
          encodedString: ${{ secrets.KEYSTORE_CONTENTS }}

      - name: Decode Certificate
        uses: timheuer/base64-to-file@v1.2
        if: matrix.platform == 'windows'
        with:
          fileName: "dragonfruit.pfx"
          fileDir: "."
          encodedString: ${{ secrets.CERTIFICATE }}

      - name: Install Certificate
        if: matrix.platform == 'windows'
        run: |
          $securePassword = ConvertTo-SecureString $Env:CertificatePassword -AsPlainText -Force
          Import-PfxCertificate -FilePath dragonfruit.pfx -CertStoreLocation cert:\CurrentUser\My -Password $securePassword
        env:
          CertificatePassword: ${{ secrets.CERTIFICATE_PASSWORD }}

      # common build/publish actions
      - uses: actions/setup-java@v3
        if: matrix.platform == 'android'
        with:
          distribution: "microsoft"
          java-version: "11"

      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "7.0.x"

      - name: Install Workloads
        run: dotnet workload restore

      - name: Authenticate NuGet Registry
        run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text https://nuget.pkg.github.com/dragonfruitnetwork/index.json

      - name: NuGet Restore
        run: |
          dotnet restore
          dotnet tool install --global dotnet-project-licenses
          dotnet tool install --global DragonFruit.Six.Client.Publishing
          dotnet add DragonFruit.Six.Client.Maui package DragonFruit.Six.Client.Services

      - name: Generate Package License Table
        run: dotnet-project-licenses -i DragonFruit.Six.Client.sln -o --output-directory DragonFruit.Six.Client --outfile licenses.md --include-project-file --md --unique

      - name: Publish
        run: dotnet publish -f ${{ matrix.framework }} -c Release -p:Version=${{ inputs.version || github.ref_name }} -p:ApplicationVersion=$Env:VERSION_NUMBER -p:ApplicationDisplayVersion=${{ inputs.version || github.ref_name }} -p:AndroidSigningStorePass=${{ secrets.KEYSTORE_SECRET || 'dragon6' }} -p:AndroidSigningKeyPass=${{ secrets.KEY_SECRET || 'dragon6' }} DragonFruit.Six.Client.Maui

      # upload artifacts
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v3
        if: matrix.platform == 'android'
        with:
          name: ${{ env.android_artifact_key }}
          path: |
            DragonFruit.Six.Client.Maui/bin/Release/net7.0-android/publish/com.dragon.six-Signed.apk
            DragonFruit.Six.Client.Maui/bin/Release/net7.0-android/publish/com.dragon.six-Signed.aab

      - name: Rename and Move MSIX
        if: matrix.platform == 'windows'
        working-directory: ${{ matrix.output-folder }}\AppPackages
        run: |
          $path = Get-ChildItem -Path **\DragonFruit.Six.Client.Maui_*_x64.msix
          [System.IO.File]::Move($path.FullName, [System.IO.Path]::Combine($Env:GITHUB_WORKSPACE, 'DragonFruit.Six.Client.Maui_x64.msix'))

      - name: Upload MSIX
        uses: actions/upload-artifact@v3
        if: matrix.platform == 'windows'
        with:
          retention-days: 7
          name: ${{ env.windows_artifact_key }}
          path: DragonFruit.Six.Client.Maui_x64.msix
      
      # submit version info to dragon6-web
      - name: Submit Version Info
        run: d6client submit --platform ${{ matrix.platform }} --dir ${{ matrix.output-folder }} --obj .\DragonFruit.Six.Client.Maui\obj --client-id "$Env:ClientId" --client-secret "$Env:ClientSecret"
        env:
          ClientId: ${{ secrets.HINA_ID }}
          ClientSecret: ${{ secrets.HINA_SECRET }}

  publish-android:
    runs-on: macos-latest
    environment: android
    needs: build
    
    steps:
      - name: Set Build Number
        run: echo "VERSION_NUMBER=$((500 + ${{ github.run_number }}))" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Import IAM Credentials
        run: echo $IAM_KEY > google-play-iam.json
        env:
          IAM_KEY: ${{ secrets.GCLOUD_IAM }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.android_artifact_key }}

      - name: Upload APK to Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: com.dragon.six-Signed.apk

      - name: Fastlane (Internal Deployment)
        run: fastlane internal version_name:${{ inputs.version || github.ref_name }} version_code:$VERSION_NUMBER

      - name: Fastlane (Beta)
        run: fastlane beta version_name:${{ inputs.version || github.ref_name }} version_code:$VERSION_NUMBER
        if: github.event_name == 'release' && github.event.release.prerelease

      - name: Fastlane
        run: fastlane production version_name:${{ inputs.version || github.ref_name }} version_code:$VERSION_NUMBER
        if: github.event_name == 'release' && !github.event.release.prerelease

  publish-windows:
    if: github.event_name == 'release'
    runs-on: windows-latest
    environment: windows
    needs: build
    
    steps:
      - name: Setup Microsoft StoreBroker
        run: |
          Set-PSRepository -Name "PSGallery" -InstallationPolicy Trusted
          Set-ExecutionPolicy RemoteSigned -Force
          Install-Module -Name StoreBroker -Force
          Import-Module StoreBroker

          $clientSecret = echo $Env:AADSecret | ConvertTo-SecureString -AsPlainText -Force
          $clientCredentials = New-Object System.Management.Automation.PSCredential "$Env:AADClient", $clientSecret

          Set-StoreBrokerAuthentication -TenantId "$Env:AADTenant" -Credential $clientCredentials
        env:
          AADSecret: ${{ secrets.AAD_SECRET }}
          AADClient: ${{ secrets.AAD_CLIENT }}
          AADTenant: ${{ secrets.AAD_TENANT }}

      - name: Save Certificate
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "dragonfruit.pfx"
          fileDir: ${{ github.workspace }}
          encodedString: ${{ secrets.CERTIFICATE }}

      # the deployment assets are private for now, but will be public in the future
      - name: Get deploy token
        id: d6deploy
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ secrets.D6DEPLOY_APP_ID }}
          private_key: ${{ secrets.D6DEPLOY_PRIVATE_KEY }}

      - name: Checkout store assets
        uses: actions/checkout@v3
        with:
          repository: dragonfruitnetwork/dragon6-distribution-assets
          token: ${{ steps.d6deploy.outputs.token }}

      - name: Download MSIX
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.windows_artifact_key }}
          path: ./bundle-staging

      - name: Produce MSIX bundle file
        working-directory: ${{ github.workspace }}/bundle-staging
        shell: cmd
        run: |
          "%ProgramFiles(x86)%\Windows Kits\10\bin\10.0.22000.0\x64\MakeAppx.exe" bundle /v /d . /bv ${{ inputs.version || github.ref_name }}.0 /p DragonFruit.Six.Client.msixbundle
          "%ProgramFiles(x86)%\Windows Kits\10\bin\10.0.22000.0\x64\signtool.exe" sign /fd SHA256 /f ..\dragonfruit.pfx /p %CertPass% DragonFruit.Six.Client.msixbundle      
        env:
          CertPass: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: Upload bundle to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./bundle-staging/DragonFruit.Six.Client.msixbundle

      - name: Create Release
        run: New-SubmissionPackage -ConfigPath ./winstore-config.json -AppxPath ./bundle-staging/DragonFruit.Six.Client.msixbundle -OutPath .

      - name: Flight package (beta)
        if: ${{ github.event.release.prerelease }}
        run: Update-ApplicationFlightSubmission -AppId 9N88CQPKGS15 -FlightId 203522cc-6c4a-42a0-8080-de225fb1ee74 -SubmissionDataPath .\dragon6-winstore.json -PackagePath .\dragon6-winstore.zip -AutoCommit -Force -ReplacePackages -TargetPublishMode Immediate

      - name: Submit to Windows Store
        if: ${{ !github.event.release.prerelease }}
        run: Update-ApplicationSubmission -AppId 9N88CQPKGS15 -SubmissionDataPath ./dragon6-winstore.json -PackagePath ./dragon6-winstore.zip -AutoCommit -Force -AddPackages -UpdatePublishModeAndVisibility -UpdateListings -UpdateNotesForCertification
