@foreach (var overlay in DiscoveredButtons.OfType<IOverlayInfo>())
{
    <Dragon6Overlay @ref="Overlays[overlay]" Info="overlay"/>
}

<nav class="d6-header-footer">
    <a href="/home" class="d6-header-footer--container text-decoration-none">
        <img src="_content/DragonFruit.Six.Client/assets/dragon6.svg" alt="" class="d6-logo">
        <span class="ms-4 text-truncate d6-logo-subtitle">@Title</span>
    </a>

    <div class="d6-header-footer--container">
        <div class="d6-header--links">
            <CascadingValue Value="Overlays">
                <Dragon6MenuOverlay Buttons="DiscoveredButtons"/>
            </CascadingValue>
        </div>
    </div>
</nav>

@code {

    [Parameter]
    public string Title { get; set; }

    [Inject]
    private IServiceProvider Services { get; set; }

    private IEnumerable<IHeaderButton> DiscoveredButtons { get; set; }
    private IDictionary<IOverlayInfo, Dragon6Overlay> Overlays { get; set; } = new Dictionary<IOverlayInfo, Dragon6Overlay>();

    protected override void OnInitialized()
    {
        DiscoveredButtons = GetType().Assembly
                                     .GetTypes()
                                     .Where(x => !x.IsInterface && !x.IsAbstract && x.IsAssignableTo(typeof(IHeaderButton)))
                                     .Select(Activator.CreateInstance)
                                     .Cast<IHeaderButton>()
                                     .OrderBy(x => x.Order)
                                     .ToList();
    }

}