@using BlazorPro.BlazorSize
@using Humanizer

<div class="d6-operator-card-header flex-md-row justify-content-md-between">
    <h3 class="m-0">Operator Stats</h3>
    <div class="d6-operator-card-header-options flex-md-nowrap">
        <MediaQuery Media="@Breakpoints.SmallDown" @bind-Matches="SystemFilterUnplayed">
            <Unmatched>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" @bind="UserFilterUnplayed">
                    <label class="form-check-label">Filter unplayed</label>
                </div>
            </Unmatched>
        </MediaQuery>

        <HxDropdownButtonGroup Direction="DropdownDirection.Down">
            <HxDropdownToggleButton CssClass="text-light border" Color="ThemeColor.None">
                @SortMode.Humanize()
            </HxDropdownToggleButton>
            <HxDropdownMenu CssClass="dropdown-menu-dark">
                @foreach (var sortMode in Enum.GetValues<OperatorSortMode>())
                {
                    <HxDropdownItem OnClick="() => SortMode = sortMode">@sortMode.Humanize()</HxDropdownItem>
                }
            </HxDropdownMenu>
        </HxDropdownButtonGroup>
    </div>
</div>

@if (Stats != null)
{
    var groups = Stats.ToLookup(x => x.Info.Type);
    <div class="d6-stat-container mt-4">
        @foreach (var group in groups.OrderBy(x => x.Key))
        {
            <div>
                <h4 class="m-0 mb-2 text-center">@group.Key.Humanize().Pluralize()</h4>
                <hr class="w-100 text-secondary"/>
                <div class="d6-operator-card-container">
                    @foreach (var op in GetDisplayableGroup(group))
                    {
                        <StatsOperatorCard Info="op.Info" Stats="op.Stats"/>
                    }
                </div>
            </div>
        }
    </div>
}