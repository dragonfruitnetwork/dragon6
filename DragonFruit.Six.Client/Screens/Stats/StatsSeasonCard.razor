@using DragonFruit.Six.Api.Seasonal.Enums
@using DragonFruit.Six.Api.Seasonal.Entities
@using DragonFruit.Six.Client.Utils
@using SeasonInfo = DragonFruit.Six.Client.Database.Entities.SeasonInfo
@{
    var isRealRank = GetDisplayedRank(out var rankInfo);
}

<div class="d6-season-card justify-content-md-center" id="d6-season-@Season.Info.Season" role="button" @onclick="() => OnSeasonSelected.InvokeAsync(Season)">
    <img src="@RankIconUtils.FormatRankIconUrl(rankInfo.IconUrl)" alt="@rankInfo.Name" class="d6-season-rank user-select-none @(isRealRank ? null : "d6-season-rank-mmr")">
    <div class="d-flex flex-column ms-2">
        <span class="text-truncate" style="color: @Season.Info.AccentColour">@Season.Info.SeasonName</span>
        <h4 class="m-0">@rankInfo.Name</h4>
    </div>
</div>

@code {

    [Parameter]
    public bool DisplayMaxRank { get; set; }

    [Parameter]
    public SeasonalStatsContainer Season { get; set; }

    [Parameter]
    public EventCallback<SeasonalStatsContainer> OnSeasonSelected { get; set; }

    /// <summary>
    /// Gets the <see cref="RankInfo"/> to display in the card, returning true if the rank was actually obtained by the user
    /// </summary>
    private bool GetDisplayedRank(out RankInfo rankInfo)
    {
        if (Season.Stats.Board != BoardType.Ranked && Season.Stats.Wins + Season.Stats.Losses + Season.Stats.Abandons > 0)
        {
            rankInfo = Season.Stats.MMRRankInfo;
            return false;
        }

        switch (Season.Ranked2Stats?.Board)
        {
            case BoardType.Ranked when DisplayMaxRank:
                rankInfo = Season.Ranked2Stats.MaxRankInfo;
                break;

            case BoardType.Ranked:
                rankInfo = Season.Ranked2Stats.RankInfo;
                break;

            case null when DisplayMaxRank:
                rankInfo = Season.Stats.MaxRankInfo;
                break;

            default:
                rankInfo = Season.Stats.RankInfo;
                break;
        }

        // board is real rank if it's ranked and either:
        // 1) the season is pre ranked2 (less than 28)
        // 2) there are ranked2 stats
        return Season.Stats.Board == BoardType.Ranked && (Season.Ranked2Stats != null || Season.Stats.SeasonId < 28);
    }

}