@using DragonFruit.Six.Client.Configuration
@using System.Reflection
@using System.ComponentModel
@using Humanizer
@using JetBrains.Annotations
@typeparam T where T : struct, Enum

<HxSelect TItem="T"
          TValue="T"
          @bind-Value="SettingValue"
          Nullable="false"
          Data="@GetValues()"
          Label="@GetSettingDisplayName()"
          TextSelector="GetValueDisplayName"
          InputCssClass="bg-dark text-light"/>

@code {

    [Parameter]
    public Dragon6Setting Setting { get; set; }

    [Parameter]
    public bool HumanizeValues { get; set; } = true;

    [Parameter, CanBeNull]
    public Func<T, bool> CanDisplaySetting { get; set; }

    [Inject]
    private Dragon6Configuration Configuration { get; set; }

    private T SettingValue
    {
        get => Configuration.Get<T>(Setting);
        set => Configuration.Set(Setting, value);
    }

    private string GetSettingDisplayName()
    {
        var name = Setting.ToString();
        return typeof(Dragon6Setting).GetField(name).GetCustomAttribute<DescriptionAttribute>()?.Description ?? name.Humanize();
    }

    private IEnumerable<T> GetValues()
    {
        var values = Enum.GetValues<T>();
        return CanDisplaySetting != null ? values.Where(CanDisplaySetting) : values;
    }

    private string GetValueDisplayName(T value) => HumanizeValues ? value.Humanize() : value.ToString();
}