@using DragonFruit.Six.Api.Accounts.Entities
@using DragonFruit.Six.Api.Accounts.Enums
@using DragonFruit.Six.Api.Seasonal
@using DragonFruit.Six.Client.Database.Entities
@using DragonFruit.Six.Client.Database.Services
@using DragonFruit.Six.Client.Network.User
@using DragonFruit.Six.Client.Overlays.Search
@using DragonFruit.Six.Client.Utils
@using System.Text
@using Markdig.Helpers

@{
    var cardStyle = new StringBuilder();

    if (string.IsNullOrEmpty(User?.Covers?.Banner))
    {
        cardStyle.Append("background: transparent;");
    }
    else
    {
        cardStyle.Append("border: none;");
        cardStyle.Append("background-position: center;");
        cardStyle.Append($"background-image: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url({User.Covers.Banner});");
    }
}

<div role="button" class="card user-select-none" style="@cardStyle.ToString()" @onclick="() => SearchProviderState.TriggerSearch(Account.UbisoftId, Account.Platform, IdentifierType.UserId)">
    <div class="card-body d-flex align-items-center gap-3">
        @if (Info == null)
        {
            <HxSpinner Color="ThemeColor.Info"/>
            <p>Loading account...</p>
        }
        else
        {
            <img class="overlay-avatar" src="@Account.Image" alt=""/>

            <div class="d-flex flex-column gap-1">
                <div class="d-flex align-items-center">
                    <h4 class="m-0 text-truncate">@Account.Username</h4>
                    <D6PlatformBadge Platform="Info.Platform"/>
                </div>
                @if (User?.AccountRole > AccountRole.Normal)
                {
                    <D6UserRoleBadge User="User"/>
                }
            </div>

            <img class="overlay-rank ms-auto" alt="" src="@RankIconUtils.FormatRankIconUrl(Ranks.GetFromId(Info.SeasonMaxRank).IconUrl)"/>
        }
    </div>
</div>

@code {

    [Parameter]
    public SavedAccount Info { get; set; }

    [Parameter]
    public UbisoftAccount Account { get; set; }

    [Parameter]
    public Dragon6User User { get; set; }

    [Inject]
    private SearchProviderState SearchProviderState { get; set; }

}